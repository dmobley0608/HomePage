{"version":3,"sources":["Component/Clock.js","Component/NavBar.js","Component/Greeting.js","js/morningbackgrounds.js","js/afternoonBackgrounds.js","js/eveningBackgrounds.js","js/nightbackgrounds.js","js/backgroundsetter.js","Component/Searchbar.js","Component/App.js","serviceWorker.js","index.js"],"names":["Clock","state","time","Date","this","update","setInterval","setState","clearInterval","toLocaleTimeString","React","Component","NavBar","className","href","title","today","todaysDate","toLocaleString","month","getDate","getFullYear","Greeting","name","getHours","morningBackgrounds","afternoonBackgrounds","eveningBackgrounds","nightBackground","randMorningBackground","randomNumber","length","randAfternoonBackground","max","Math","floor","random","Searchbar","method","action","style","minWidth","type","placeholder","value","document","body","backgroundImage","BackgroundSetter","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1378d52b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Clock extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = { time: new Date() }; // initialise the state\r\n    }\r\n\r\n    componentDidMount() { // create the interval once component is mounted\r\n        this.update = setInterval(() => {\r\n            this.setState({ time: new Date() });\r\n        }, 1 * 1000); // every 1 seconds\r\n    }\r\n\r\n    componentWillUnmount() { // delete the interval just before component is removed\r\n        clearInterval(this.update);\r\n    }\r\n\r\n    render() {\r\n        const { time } = this.state; // retrieve the time from state\r\n\r\n        return (\r\n        \t<div>\r\n            \t<p>\r\n                \t{/* print the string prettily */}\r\n                \t{time.toLocaleTimeString()}\r\n            \t</p>\r\n        </div>);\r\n    }\r\n}\r\n\r\n\r\nexport default Clock;","import React from 'react';\r\nimport Clock from './Clock'\r\nimport '../styles/NavBar.css'\r\n\r\n\r\nfunction NavBar () {\r\n  return (\r\n  \t<header className = ' w-100 ph3 pv2 pv3-ns ph3-m ph5-1'>\r\n\t    <nav className = 'f6 fw6 ttu tracked tl ' >    \t\r\n\t\t \t<a className =\"link grow black dib mr3 mt3 br-pill bg-white pa2\" href=\"https://smile.amazon.com/\" title=\"Amazon\">Go Shopping</a> \r\n\t\t \t<a className =\"link grow black dib mr3 br-pill bg-white pa2\" href=\"https://www.udemy.com/home/my-courses/learning/\" title=\"Udemy\">Udemy </a> \t\t   \t\t\t   \t     \r\n\t\t \t<div className = 'fr white f4 dib mr4'> <Clock /></div>\r\n\t    </nav>\r\n\r\n\t</header>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","import React from 'react';\r\n\r\n\r\nconst today = new Date();\r\nconst month = today.toLocaleString('default', { month: 'long' });\r\nconst day = today.getDate();\r\nconst year = today.getFullYear();\r\nconst todaysDate = month + \" \" + day + \", \" + year;\r\n\r\n\r\n\r\n\r\nfunction Greeting(){\r\n\tconst name = \"Dwight\";\r\n\r\n\tif(today.getHours() > 0 && today.getHours() < 12){\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t    \t<h1 className = \" tc f1 w-100 washed-blue pt6\"> Good Morning {name}! Today is {todaysDate}.</h1>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}else if(today.getHours() >= 12 && today.getHours() <= 16){\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t    \t<h1 className = \" bg tc f1 w-100 washed-blue pt7\"> Good Afternoon {name}! Today is {todaysDate}.</h1>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}else if(today.getHours() >= 17 && today.getHours() <= 20){\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t    \t<h1 className = \" tc f1 w-100 washed-blue pt6\"> Good Evening {name}! Today is {todaysDate}.</h1>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}else{\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t    \t<h1 className = \" tc f1 w-100 washed-blue pt6\"> Take Yo ass to bed {name}! Today is {todaysDate}.</h1>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\t\r\n}\r\n\r\nexport default Greeting;\r\n\r\n","export const morningBackgrounds = [\r\n\t\"https://images.unsplash.com/photo-1484402628941-0bb40fc029e7?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto\",\r\n\t\"https://images.unsplash.com/photo-1500382017468-9049fed747ef?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto\",\r\n\t\"https://images.unsplash.com/photo-1506744038136-46273834b3fb?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto\",\r\n\t\"https://images.unsplash.com/photo-1545852528-fa22f7fcd63e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto\"\r\n];\r\n\r\nexport default morningBackgrounds;","export const afternoonBackgrounds = [\r\n\t\"https://images.unsplash.com/photo-1580898179497-ce3b9e9ac350?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto\",\r\n\t\"https://images.unsplash.com/photo-1527684651001-731c474bbb5a?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto\",\r\n\t\"https://images.unsplash.com/photo-1425969195258-f23f055ef995?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto\",\r\n\t\"https://images.unsplash.com/photo-1570179476238-611e709b99e5?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto\"\r\n];\r\n\r\nexport default afternoonBackgrounds;","export const eveningBackgrounds = [\r\n\t\"https://images.unsplash.com/photo-1503058695716-c5f66a905312?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto\",\r\n\t\"https://images.unsplash.com/photo-1484766280341-87861644c80d?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto\",\r\n\t\"https://images.unsplash.com/photo-1543443436-bc6deeff2eb5?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto\",\r\n\t\"https://images.unsplash.com/photo-1500817487388-039e623edc21?ixlib=rb-1.2.1&auto\",\r\n\t\"https://images.unsplash.com/photo-1490682143684-14369e18dce8?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto\"\r\n\r\n];\r\n\r\nexport default eveningBackgrounds;","export const nightBackground = [\r\n\t\"https://images.unsplash.com/photo-1509773896068-7fd415d91e2e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60\",\r\n\t\"https://images.unsplash.com/photo-1462240006665-9529b3a399b3?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60\",\r\n\t\"https://images.unsplash.com/uploads/14116941824817ba1f28e/78c8dff1?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60\",\r\n\t\"https://images.unsplash.com/photo-1531306728370-e2ebd9d7bb99?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60\",\r\n\t\"https://images.unsplash.com/photo-1428094479093-8973a318bd76?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60\"\r\n];\r\n\r\n\r\nexport default nightBackground;","import '../styles/backgroundsetter.css';\r\nimport morningBackgrounds from '../js/morningbackgrounds';\r\nimport afternoonBackgrounds from '../js/afternoonBackgrounds';\r\nimport eveningBackgrounds from '../js/eveningBackgrounds';\r\nimport nightBackground from '../js/nightbackgrounds';\r\n\r\nconst today = new Date();\r\n\r\n// random backgrounds\r\nconst randMorningBackground = randomNumber(morningBackgrounds.length);\r\nconst randAfternoonBackground = randomNumber(afternoonBackgrounds.length);\r\nconst randEveningBackground = randomNumber(eveningBackgrounds.length);\r\nconst randNightBackground = randomNumber(nightBackground.length);\r\n\r\n//random number generator\r\nfunction randomNumber(max){\r\n\treturn Math.floor(Math.random() * max);\r\n}  \r\n\r\n\r\nfunction environmentSetter(){\r\n\t//morning\r\n\tif((today.getHours() < 12) ){\r\n\t\t\r\n\t\treturn(  document.body.style.backgroundImage = 'url('+ morningBackgrounds[randMorningBackground] +')');\r\n\t\t//afternoon\r\n\t}else if (today.getHours() < 11 && today.getHours() < 17){\r\n\t\t\r\n\t\treturn(  document.body.style.backgroundImage = 'url('+ afternoonBackgrounds[randAfternoonBackground] +')');\r\n\t\t//evening\t\r\n\t}else if (today.getHours() >16 && today.getHours() < 21){\r\n\t\t\r\n\t\treturn(  document.body.style.backgroundImage = 'url('+ eveningBackgrounds[randomNumber(eveningBackgrounds.length)] +')');\r\n\t\t//night\r\n\t}else {\r\n\t\t\r\n\t\treturn(  document.body.style.backgroundImage = 'url('+ nightBackground[randomNumber(nightBackground.length)] +')');\r\n\t\t\r\n\t}\r\n\t\r\n}\r\n\r\n\texport default environmentSetter;","import React from 'react';\r\n\r\n\r\n\r\nfunction Searchbar(){\r\n\treturn(\r\n\t\t<div className = \"tc pt4\">\r\n\t\t\t<form  method=\"get\" action=\"https://www.google.com/search\">\t\t\t\t\t\r\n\t\t\t\t<input style ={{minWidth: \"275px\"}} className = \"w-30 tc br-pill \" type=\"text\"  name=\"q\" placeholder=\"What do you need to know?\"/>\t\r\n\t\t\t\t<input className=\" ml2 br-pill pl2 pr2\"  type=\"submit\" value=\"SEARCH\" />\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t<input type=\"hidden\" name=\"sitesearch\" value=\"\" />\r\n\t\t\t</form>\t\t\t\r\n\t\t</div>\r\n\t\t);\r\n}\r\n\r\nexport default Searchbar;","import React from 'react';\nimport '../styles/App.css';\nimport NavBar from './NavBar';\nimport Greeting from './Greeting'\nimport BackgroundSetter from '../js/backgroundsetter'\nimport Searchbar from './Searchbar';\n\n\n\nfunction App() {\n  return (\n    <div>\n        <NavBar/>\n        <Greeting/>\n        <Searchbar/>        \n    </div>\n  );\n}\nBackgroundSetter();\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Component/App';\nimport Tachyons from 'tachyons';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}